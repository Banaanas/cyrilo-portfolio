***** NOTES *****


1 - Flashing Dark Mode
Normally, there is a short flash between colors modes on page load, when the User
has already chosen one before or its Browser is set to prefer-color-scheme: dark.
It's due to Next.js rendering the HTML before the JavaScript (and Emotion Theme(s)).
It could be resolved with the help of CSS Variables used in our Global Css Sheet and
a Script added in the Document file, with or without a Library.
This application uses CSS Variables in GlobalStyles.js and nex-themes Library which injects
the Script in _document.js.
https://www.joshwcomeau.com/react/dark-mode/
https://dev.to/sreetamdas/the-perfect-dark-mode-2d7g
https://blog.maximeheckel.com/posts/switching-off-the-lights-part-2-fixing-dark-mode-flashing-on-servered-rendered-website#using-css-variables-in-my-themes
https://www.infoxicator.com/dark-mode-is-dead-here-is-an-alternative
https://github.com/brianlovin/brian-lovin-next/pull/627


2 - When Use with an <a> styled by Emotion, the Next.js Link Component
does not pass the href, and Tab Key Navigation, among others, becomes impossible.
A Work-Around is to used the passHref prop inside the Link.
--https://nextjs.org/docs/api-reference/next/link#if-the-child-is-a-custom-component-that-wraps-an-a-tag

3 - When Open, the Burger Menu / Side Menu (NavBar Component) cover 100 %
of the Viewport because it has an "min-weight: 100vh" property.
It was not possible to put "min-weight: 100vh" because in this case, the
Header just take a -100% TranslateY when scroll down.

100vh would normally cause some bug with mobile browsers.
--> https://stackoverflow.com/questions/37112218/css3-100vh-not-constant-in-mobile-browser
But here, because Scroll is disabled when the Burger Menu is open, the Bug
can NOT be visible (because Scroll is impossible).

4 - scroll-behavior: smooth; (body)
Because some Browsers still don't support CSS "scroll-behavior: smooth", React-Scroll
Library has also been used.

